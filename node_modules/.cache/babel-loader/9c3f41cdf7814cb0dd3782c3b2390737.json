{"ast":null,"code":"import * as types from '../constants/Actiontype';\nvar data = JSON.parse(localStorage.getItem('todoItems'));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n  let index = action.index;\n\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.HAND_STATUS:\n      state[index].isComplete = !state[index].isComplete;\n      localStorage.setItem('todoItems', todoList);\n      return [...state];\n\n    case types.DELETE_ITEM:\n      state = state.splice(index, 1);\n      let todoList = JSON.stringify(state);\n      localStorage.setItem('todoItems', todoList);\n      return [...state];\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/tuankhai/Desktop/project/react/redux-TodoList/src/reducers/allItem.js"],"names":["types","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","index","type","LIST_ALL","HAND_STATUS","isComplete","setItem","todoList","DELETE_ITEM","splice","stringify"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,yBAAvB;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,IAAIM,SAAS,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC9C,MAAIC,KAAK,GAAGD,MAAM,CAACC,KAAnB;;AACA,UAAQD,MAAM,CAACE,IAAf;AACI,SAAKX,KAAK,CAACY,QAAX;AACI,aAAOJ,KAAP;;AACJ,SAAKR,KAAK,CAACa,WAAX;AACIL,MAAAA,KAAK,CAACE,KAAD,CAAL,CAAaI,UAAb,GAA0B,CAACN,KAAK,CAACE,KAAD,CAAL,CAAaI,UAAxC;AAEAV,MAAAA,YAAY,CAACW,OAAb,CAAqB,WAArB,EAAkCC,QAAlC;AACA,aAAO,CAAC,GAAGR,KAAJ,CAAP;;AACJ,SAAKR,KAAK,CAACiB,WAAX;AACIT,MAAAA,KAAK,GAAGA,KAAK,CAACU,MAAN,CAAaR,KAAb,EAAmB,CAAnB,CAAR;AACA,UAAIM,QAAQ,GAAGd,IAAI,CAACiB,SAAL,CAAeX,KAAf,CAAf;AACAJ,MAAAA,YAAY,CAACW,OAAb,CAAqB,WAArB,EAAkCC,QAAlC;AACA,aAAO,CAAC,GAAGR,KAAJ,CAAP;;AACJ;AAAS,aAAOA,KAAP;AAbb;AAgBH,CAlBD;;AAoBA,eAAeD,SAAf","sourcesContent":["import * as types from '../constants/Actiontype';\n\nvar data = JSON.parse(localStorage.getItem('todoItems'));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n    let index = action.index;\n    switch (action.type) {\n        case types.LIST_ALL:\n            return state;\n        case types.HAND_STATUS:\n            state[index].isComplete = !state[index].isComplete;\n            \n            localStorage.setItem('todoItems', todoList);\n            return [...state];\n        case types.DELETE_ITEM:\n            state = state.splice(index,1);\n            let todoList = JSON.stringify(state);\n            localStorage.setItem('todoItems', todoList);\n            return [...state];\n        default: return state;\n    }\n\n}\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}