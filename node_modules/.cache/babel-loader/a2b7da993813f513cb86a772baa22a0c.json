{"ast":null,"code":"import * as types from '../constants/Actiontype';\nvar data = JSON.parse(localStorage.getItem('todoItems'));\nvar initialState = data ? data : [];\n\nvar onCreatNewToDo = inputVal => {\n  // console.log(inputVal);\n  var newToDo = {\n    id: randomID(),\n    content: inputVal,\n    isComplete: false\n  };\n  return newToDo;\n};\n\nvar myReducer = (state = initialState, action) => {\n  let index = action.index;\n  let todoList;\n\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.HAND_STATUS:\n      state[index].isComplete = !state[index].isComplete;\n      todoList = JSON.stringify(state);\n      localStorage.setItem('todoItems', todoList);\n      return [...state];\n\n    case types.DELETE_ITEM:\n      state.splice(index, 1);\n      todoList = JSON.stringify(state);\n      localStorage.setItem('todoItems', todoList);\n      return [...state];\n\n    case types.ADD_ITEM:\n      return [...state];\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/tuankhai/Desktop/project/react/redux-TodoList/src/reducers/allItem.js"],"names":["types","data","JSON","parse","localStorage","getItem","initialState","onCreatNewToDo","inputVal","newToDo","id","randomID","content","isComplete","myReducer","state","action","index","todoList","type","LIST_ALL","HAND_STATUS","stringify","setItem","DELETE_ITEM","splice","ADD_ITEM"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,yBAAvB;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAKA,IAAIM,cAAc,GAAIC,QAAD,IAAc;AAC/B;AACA,MAAIC,OAAO,GAAG;AACVC,IAAAA,EAAE,EAAEC,QAAQ,EADF;AAEVC,IAAAA,OAAO,EAAEJ,QAFC;AAGVK,IAAAA,UAAU,EAAE;AAHF,GAAd;AAKA,SAAOJ,OAAP;AACH,CARD;;AAUA,IAAIK,SAAS,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAC9C,MAAIC,KAAK,GAAGD,MAAM,CAACC,KAAnB;AACA,MAAIC,QAAJ;;AACA,UAAQF,MAAM,CAACG,IAAf;AACI,SAAKnB,KAAK,CAACoB,QAAX;AACI,aAAOL,KAAP;;AACJ,SAAKf,KAAK,CAACqB,WAAX;AACIN,MAAAA,KAAK,CAACE,KAAD,CAAL,CAAaJ,UAAb,GAA0B,CAACE,KAAK,CAACE,KAAD,CAAL,CAAaJ,UAAxC;AACAK,MAAAA,QAAQ,GAAGhB,IAAI,CAACoB,SAAL,CAAeP,KAAf,CAAX;AACAX,MAAAA,YAAY,CAACmB,OAAb,CAAqB,WAArB,EAAkCL,QAAlC;AACA,aAAO,CAAC,GAAGH,KAAJ,CAAP;;AACJ,SAAKf,KAAK,CAACwB,WAAX;AACIT,MAAAA,KAAK,CAACU,MAAN,CAAaR,KAAb,EAAoB,CAApB;AACAC,MAAAA,QAAQ,GAAGhB,IAAI,CAACoB,SAAL,CAAeP,KAAf,CAAX;AACAX,MAAAA,YAAY,CAACmB,OAAb,CAAqB,WAArB,EAAkCL,QAAlC;AACA,aAAO,CAAC,GAAGH,KAAJ,CAAP;;AACJ,SAAKf,KAAK,CAAC0B,QAAX;AACI,aAAO,CAAC,GAAGX,KAAJ,CAAP;;AACJ;AAAS,aAAOA,KAAP;AAfb;AAkBH,CArBD;;AAuBA,eAAeD,SAAf","sourcesContent":["import * as types from '../constants/Actiontype';\n\nvar data = JSON.parse(localStorage.getItem('todoItems'));\nvar initialState = data ? data : [];\n\n\n\n\nvar onCreatNewToDo = (inputVal) => {\n    // console.log(inputVal);\n    var newToDo = {\n        id: randomID(),\n        content: inputVal,\n        isComplete: false\n    }\n    return newToDo;\n}\n\nvar myReducer = (state = initialState, action) => {\n    let index = action.index;\n    let todoList;\n    switch (action.type) {\n        case types.LIST_ALL:\n            return state;\n        case types.HAND_STATUS:\n            state[index].isComplete = !state[index].isComplete;\n            todoList = JSON.stringify(state);\n            localStorage.setItem('todoItems', todoList);\n            return [...state];\n        case types.DELETE_ITEM:\n            state.splice(index, 1);\n            todoList = JSON.stringify(state);\n            localStorage.setItem('todoItems', todoList);\n            return [...state];\n        case types.ADD_ITEM:\n            return [...state];\n        default: return state;\n    }\n\n}\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}