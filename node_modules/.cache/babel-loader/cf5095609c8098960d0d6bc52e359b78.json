{"ast":null,"code":"var _jsxFileName = \"/home/tuankhai/Desktop/project/react/redux-TodoList/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport TodoHeader from './components/todoheader';\nimport TodoBody from './components/todobody';\nimport TodoFooder from './components/todofooder';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onFilterChange = value => {\n      this.setState({\n        filter: value\n      });\n    };\n\n    this.onFilter = (todoItems, filter) => {\n      if (filter === 1) {\n        return todoItems.filter(todoItem => {\n          return todoItem.isComplete === true;\n        });\n      }\n\n      if (filter === -1) {\n        return todoItems.filter(todoItem => {\n          return todoItem.isComplete === false;\n        });\n      } else {\n        return todoItems;\n      }\n    };\n\n    this.onData = () => {\n      if (localStorage.getItem('todoItems')) {\n        return JSON.parse(localStorage.getItem('todoItems'));\n      } else {\n        return [];\n      }\n    };\n\n    this.state = {\n      todoItem: this.onData(),\n      filter: 0\n    };\n  } // onPushToDoList = (dataToDo) => {\n  //   let { todoItem } = this.state;\n  //   this.setState({\n  //     todoItem: [\n  //       ...todoItem,\n  //       this.onCreatNewToDo(dataToDo)\n  //     ]\n  //   });\n  //   let todoList = JSON.stringify(todoItem);\n  //   this.updateLocalStorage(todoList);\n  // }\n  // onUpdateStatus = (index) => {\n  //   console.log(index);\n  //   let { todoItem } = this.state;\n  //   todoItem[index].isComplete = !todoItem[index].isComplete;\n  //   this.setState({\n  //     todoItem: todoItem,\n  //   });\n  //   let todoList = JSON.stringify(todoItem);\n  //   this.updateLocalStorage(todoList);\n  // }\n  // removeItem = (index) => {\n  //   console.log(index);\n  //   let { todoItem } = this.state;\n  //   this.setState({\n  //     todoItem:[\n  //       ...todoItem.slice(0,index),\n  //       ...todoItem.splice(index-1,0),\n  //       ...todoItem.slice(index+1)\n  //     ]\n  //   });\n  //   let todoList = JSON.stringify(todoItem);\n  //   this.updateLocalStorage(todoList);\n  // }\n  // updateLocalStorage = (todoList) => {\n  //   localStorage.setItem('todoItems', todoList);\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"todos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(TodoHeader // inputVal = { this.onCreatNewToDo }\n    // addItem={this.onPushToDoList}\n    , {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(TodoBody // data={this.onFilter(todoItem,filter)}\n    // onUpdateStatus={this.onUpdateStatus}\n    // removeItem={this.removeItem}\n    , {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(TodoFooder, {\n      filter: filter // onFilterChange = { this.onFilterChange }\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = (despatch, props) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/tuankhai/Desktop/project/react/redux-TodoList/src/App.js"],"names":["React","Component","connect","TodoHeader","TodoBody","TodoFooder","App","constructor","props","onFilterChange","value","setState","filter","onFilter","todoItems","todoItem","isComplete","onData","localStorage","getItem","JSON","parse","state","render","mapStateToProps","mapDispatchToProps","despatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,WAAP;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAGA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAqDnBC,cArDmB,GAqDDC,KAAD,IAAW;AAC1B,WAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAGF;AADG,OAAd;AAGD,KAzDkB;;AAAA,SA2DnBG,QA3DmB,GA2DR,CAACC,SAAD,EAAWF,MAAX,KAAsB;AAC/B,UAAGA,MAAM,KAAK,CAAd,EAAgB;AACd,eAAOE,SAAS,CAACF,MAAV,CAAkBG,QAAD,IAAc;AACpC,iBAAOA,QAAQ,CAACC,UAAT,KAAwB,IAA/B;AACD,SAFM,CAAP;AAGD;;AACD,UAAGJ,MAAM,KAAK,CAAC,CAAf,EAAiB;AACf,eAAOE,SAAS,CAACF,MAAV,CAAkBG,QAAD,IAAc;AACpC,iBAAOA,QAAQ,CAACC,UAAT,KAAwB,KAA/B;AACD,SAFM,CAAP;AAGD,OAJD,MAKI;AACF,eAAOF,SAAP;AACD;AAEF,KA1EkB;;AAAA,SA4EnBG,MA5EmB,GA4EV,MAAM;AACb,UAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAH,EAAqC;AACnC,eAAOC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAP;AACD,OAFD,MAEM;AACJ,eAAO,EAAP;AACD;AACF,KAlFkB;;AAEjB,SAAKG,KAAL,GAAa;AACXP,MAAAA,QAAQ,EAAE,KAAKE,MAAL,EADC;AAEXL,MAAAA,MAAM,EAAG;AAFE,KAAb;AAID,GAPyB,CAY1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;AAiCAW,EAAAA,MAAM,GAAG;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD,CACE;AACA;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,QAAD,CACE;AACA;AACA;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAUE,oBAAC,UAAD;AACE,MAAA,MAAM,EAAGX,MADX,CAEE;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF,CADF;AAmBD;;AA1GyB;;AA8G5B,MAAMY,eAAe,GAAGF,KAAK,IAAI;AAC/B,SAAO,EAAP;AACD,CAFD;;AAIA,MAAMG,kBAAkB,GAAG,CAACC,QAAD,EAAWlB,KAAX,KAAqB;AAC9C,SAAO,EAAP;AACD,CAFD;;AAIA,eAAeN,OAAO,CAACsB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CnB,GAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport './App.css';\n\nimport TodoHeader from './components/todoheader';\nimport TodoBody from './components/todobody';\nimport TodoFooder from './components/todofooder';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoItem: this.onData(),\n      filter : 0\n    }\n  }\n\n\n \n\n  // onPushToDoList = (dataToDo) => {\n  //   let { todoItem } = this.state;\n  //   this.setState({\n  //     todoItem: [\n  //       ...todoItem,\n  //       this.onCreatNewToDo(dataToDo)\n  //     ]\n  //   });\n  //   let todoList = JSON.stringify(todoItem);\n  //   this.updateLocalStorage(todoList);\n  // }\n\n  // onUpdateStatus = (index) => {\n  //   console.log(index);\n  //   let { todoItem } = this.state;\n  //   todoItem[index].isComplete = !todoItem[index].isComplete;\n  //   this.setState({\n  //     todoItem: todoItem,\n  //   });\n  //   let todoList = JSON.stringify(todoItem);\n  //   this.updateLocalStorage(todoList);\n  // }\n\n  // removeItem = (index) => {\n  //   console.log(index);\n  //   let { todoItem } = this.state;\n  //   this.setState({\n  //     todoItem:[\n  //       ...todoItem.slice(0,index),\n  //       ...todoItem.splice(index-1,0),\n  //       ...todoItem.slice(index+1)\n  //     ]\n  //   });\n  //   let todoList = JSON.stringify(todoItem);\n  //   this.updateLocalStorage(todoList);\n\n  // }\n\n  // updateLocalStorage = (todoList) => {\n  //   localStorage.setItem('todoItems', todoList);\n  // }\n\n  onFilterChange = (value) => {\n    this.setState({\n      filter : value\n    });\n  }\n\n  onFilter = (todoItems,filter) => {\n    if(filter === 1){\n      return todoItems.filter((todoItem) => {\n        return todoItem.isComplete === true;\n      })\n    }\n    if(filter === -1){\n      return todoItems.filter((todoItem) => {\n        return todoItem.isComplete === false;\n      })\n    }\n    else{\n      return todoItems;\n    }\n\n  }\n\n  onData = () => {\n    if(localStorage.getItem('todoItems')){\n      return JSON.parse(localStorage.getItem('todoItems'));\n    }else {\n      return [];\n    }\n  }\n\n  render() {\n  \n    return (\n      <div className=\"App\">\n        <div className=\"todos\">\n          <TodoHeader\n            // inputVal = { this.onCreatNewToDo }\n            // addItem={this.onPushToDoList}\n          />\n          <TodoBody\n            // data={this.onFilter(todoItem,filter)}\n            // onUpdateStatus={this.onUpdateStatus}\n            // removeItem={this.removeItem}\n          />\n          <TodoFooder \n            filter= {filter}\n            // onFilterChange = { this.onFilterChange }\n          />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n}\n\nconst mapDispatchToProps = (despatch, props) => {\n  return {};\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}