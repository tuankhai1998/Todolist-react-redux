{"ast":null,"code":"import * as types from '../constants/Actiontype';\nvar data = JSON.parse(localStorage.getItem('todoItems'));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.HAND_STATUS:\n      console.log(action.index);\n      todoItem[index].isComplete = !todoItem[index].isComplete;\n      this.setState({\n        todoItem: todoItem\n      });\n      let todoList = JSON.stringify(todoItem);\n      this.updateLocalStorage(todoList);\n      return [...state];\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/tuankhai/Desktop/project/react/redux-TodoList/src/reducers/allItem.js"],"names":["types","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","type","LIST_ALL","HAND_STATUS","console","log","index","todoItem","isComplete","setState","todoList","stringify","updateLocalStorage"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,yBAAvB;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,IAAIM,SAAS,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,KAAK,CAACW,QAAX;AACI,aAAOH,KAAP;;AACJ,SAAKR,KAAK,CAACY,WAAX;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,KAAnB;AACAC,MAAAA,QAAQ,CAACD,KAAD,CAAR,CAAgBE,UAAhB,GAA6B,CAACD,QAAQ,CAACD,KAAD,CAAR,CAAgBE,UAA9C;AACA,WAAKC,QAAL,CAAc;AACVF,QAAAA,QAAQ,EAAEA;AADA,OAAd;AAGA,UAAIG,QAAQ,GAAGjB,IAAI,CAACkB,SAAL,CAAeJ,QAAf,CAAf;AACA,WAAKK,kBAAL,CAAwBF,QAAxB;AACA,aAAO,CAAC,GAAGX,KAAJ,CAAP;;AACJ;AAAS,aAAOA,KAAP;AAZb;AAeH,CAhBD;;AAkBA,eAAeD,SAAf","sourcesContent":["import * as types from '../constants/Actiontype';\n\nvar data = JSON.parse(localStorage.getItem('todoItems'));\nvar initialState = data ? data : [];\n\nvar myReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.LIST_ALL:\n            return state;\n        case types.HAND_STATUS:\n            console.log(action.index);\n            todoItem[index].isComplete = !todoItem[index].isComplete;\n            this.setState({\n                todoItem: todoItem,\n            });\n            let todoList = JSON.stringify(todoItem);\n            this.updateLocalStorage(todoList);\n            return [...state];\n        default: return state;\n    }\n\n}\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}