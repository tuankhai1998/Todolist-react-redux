{"ast":null,"code":"var _jsxFileName = \"/home/tuankhai/Desktop/project/react/reactproject2/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TodoHeader from './components/todoheader';\nimport TodoBody from './components/todobody';\nimport TodoFooder from './components/todofooder';\n\nvar randomstring = require(\"randomstring\");\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.randomID = () => {\n      return randomstring.generate(7) + '-' + randomstring.generate(9) + '-' + randomstring.generate(12);\n    };\n\n    this.onCreatNewToDo = inputVal => {\n      // console.log(inputVal);\n      var newToDo = {\n        id: this.randomID(),\n        content: inputVal,\n        isComplete: false\n      };\n      return newToDo;\n    };\n\n    this.onPushToDoList = dataToDo => {\n      this.setState({\n        todoItem: [...this.state.todoItem, this.onCreatNewToDo(dataToDo)]\n      });\n    };\n\n    this.getIndex = id => {\n      let todoItem = this.state.todoItem;\n      todoItem.forEach((todo, index) => {\n        if (todo.id === id) return index;\n        return -1;\n      });\n    };\n\n    this.onUpdateStatus = id => {\n      let index = getIndex(id);\n      let todoItem = this.state.todoItem;\n      todoItem[index].isComplete = !todoItem[index].isComplete;\n      this.setState({\n        todoItem: todoItem\n      });\n    };\n\n    this.removeItem = id => {\n      let index = getIndex(id);\n      let todoItem = this.state.todoItem;\n      this.setState({\n        todoItem: [...todoItem.slice(0, index), ...todoItem.splice(index - 1, 0), ...todoItem.slice(index + 1)]\n      });\n    };\n\n    this.onFilterChange = value => {\n      this.setState({\n        filter: value\n      });\n    };\n\n    this.state = {\n      todoItem: [],\n      filter: 0\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          todoItem = _this$state.todoItem,\n          filter = _this$state.filter;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"todos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(TodoHeader // inputVal = { this.onCreatNewToDo }\n    , {\n      addItem: this.onPushToDoList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(TodoBody, {\n      data: todoItem,\n      onUpdateStatus: this.onUpdateStatus,\n      removeItem: this.removeItem,\n      onFilter: filter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(TodoFooder, {\n      filter: filter,\n      onFilterChange: this.onFilterChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tuankhai/Desktop/project/react/reactproject2/src/App.js"],"names":["React","Component","TodoHeader","TodoBody","TodoFooder","randomstring","require","App","constructor","props","randomID","generate","onCreatNewToDo","inputVal","newToDo","id","content","isComplete","onPushToDoList","dataToDo","setState","todoItem","state","getIndex","forEach","todo","index","onUpdateStatus","removeItem","slice","splice","onFilterChange","value","filter","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TodoHeader from './components/todoheader';\nimport TodoBody from './components/todobody';\nimport TodoFooder from './components/todofooder';\n\nvar randomstring = require(\"randomstring\");\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoItem: [\n\n      ],\n      filter : 0\n    }\n  }\n\n  randomID = () => {\n    return randomstring.generate(7) + '-' + randomstring.generate(9) + '-' + randomstring.generate(12);\n  }\n\n  onCreatNewToDo = (inputVal) => {\n    // console.log(inputVal);\n    var newToDo = {\n      id: this.randomID(),\n      content: inputVal,\n      isComplete: false\n    }\n    return newToDo;\n  }\n\n  onPushToDoList = (dataToDo) => {\n    this.setState({\n      todoItem: [\n        ...this.state.todoItem,\n        this.onCreatNewToDo(dataToDo)\n      ]\n    });\n  }\n\n  getIndex = (id) => {\n    let { todoItem } = this.state;\n    todoItem.forEach((todo,index) => {\n      if (todo.id === id )\n        return index;\n      return -1;\n    })\n  }\n\n  onUpdateStatus = (id) => {\n    let index = getIndex(id);\n    let { todoItem } = this.state;\n    todoItem[index].isComplete = !todoItem[index].isComplete;\n    this.setState({\n      todoItem: todoItem,\n    });\n  }\n\n  removeItem = (id) => {\n    let index = getIndex(id);\n    let { todoItem } = this.state;\n    this.setState({\n      todoItem:[\n        ...todoItem.slice(0,index),\n        ...todoItem.splice(index-1,0),\n        ...todoItem.slice(index+1)\n      ]\n    });\n  }\n\n\n\n  onFilterChange = (value) => {\n    this.setState({\n      filter : value\n    });\n  }\n\n  render() {\n    const { todoItem, filter } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"todos\">\n          <TodoHeader\n            // inputVal = { this.onCreatNewToDo }\n            addItem={this.onPushToDoList}\n          />\n          <TodoBody\n            data={todoItem}\n            onUpdateStatus={this.onUpdateStatus}\n            removeItem={this.removeItem}\n            onFilter = {filter}\n          />\n          <TodoFooder \n            filter= {filter}\n            onFilterChange = { this.onFilterChange }\n          />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}